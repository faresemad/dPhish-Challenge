version: "3"

volumes:
  ip_scanner_postgres_data: {}
  ip_scanner_postgres_data_backups: {}
  ip_scanner_django_media: {}

services:
  django:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
    image: ip_scanner_django
    container_name: ip_scanner_django
    depends_on:
      - postgres
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.django
      - ./.envs/.postgres
    expose:
      - 8000
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/postgres/Dockerfile
    image: ip_scanner_production_postgres
    container_name: ip_scanner_postgres
    volumes:
      - ip_scanner_postgres_data:/var/lib/postgresql/data
      - ip_scanner_postgres_data_backups:/backups
    env_file:
      - ./.envs/.postgres

  redis:
    image: redis:latest
    container_name: ip_scanner_redis
    ports:
      - "6379:6379"

  celery_worker:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
    image: django_celery_worker
    command: /start-celeryworker
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.django
      - ./.envs/.postgres
    depends_on:
      - redis
      - postgres

  celery_beat:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
    image: django_celery_beat
    command: /start-celerybeat
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.django
      - ./.envs/.postgres
    depends_on:
      - redis
      - postgres
